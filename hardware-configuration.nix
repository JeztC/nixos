# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ "amdgpu" ];
  boot.extraModulePackages = [ ];
  boot.supportedFilesystems = [ "ntfs" ];

  # Change this to match your system's CPU.
  # Change this to specify the IOMMU ids you wrote down earlier.

  boot.kernelModules = [ "kvm-amd" ];
  #boot.kernelparams = [ "amd_iommu=on" "amd_iommu=pt" "kvm.ignore_msrs=1" ];
  boot.kernelParams = [ "amd_iommu=on" ];
  
  #boot.postBootCommands = ''
  #  DEVS="0000:0a:00.0 0000:0a:00.1"
#
#    for DEV in $DEVS; do
#      echo "vfio-pci" > /sys/bus/pci/devices/$DEV/driver_override
#    done
#    modprobe -i vfio-pci
# '';

   # Add a file for looking-glass to use later. This will allow for viewing the guest VM's screen in a
  # performant way.
  systemd.tmpfiles.rules = [
      "f /dev/shm/looking-glass 0660 jesse qemu-libvirtd -"
  ];
  
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/b57a4ccb-e64f-4df4-b225-5b079fd77f8e";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/6713-049C";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp7s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
